
#### Circular subarray sum

#include <bits/stdc++.h>
using namespace std;

int Kadane( int arr[],int n)
{
    int curr_sum =0;
    int maxsum =INT_MIN;
    
    for( int i=0;i<n ;i++)
    {
        curr_sum+= arr[i];
        if( curr_sum<0)
        {
            curr_sum =0;
        }
        maxsum=max(maxsum,curr_sum);
    } 
    return maxsum;
   
  
}

int main() {
	
	int n;
	cin>>n;
	int arr[n];
	for( int i=0;i<n;i++)
	{
	    cin>>arr[i];
	}
	
 int nonwrapsum = Kadane(arr,n);
 int totalsum=0;
 for( int i=0;i<n;i++)
 {
     totalsum += arr[i];
     
     arr[i]=-arr[i];
 }
 int wrapsum = totalsum + Kadane(arr,n);
 
 cout<<max(wrapsum,nonwrapsum)<<endl;
 return 0;
}
