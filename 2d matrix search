### Search  number in a 2D matrix using Brute force Approach

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n,m;
    cin>>n>>m;                         ######## Time complexity O(N*M);
    int target;
    cin>>target;
    int mat[n][m];
    
    for( int i=0;i<n;i++)
    {
        for( int j=0;j<m;j++)
        {
            cin>>mat[i][j];
        }
        
    }
    
    bool flag = false;
    
    for( int i=0;i<n;i++)
    {
        for( int j=0;j<m;j++)
        {
            if(mat[i][j] == target)
            {
            flag =true;
            }
        }
    }
    
    if(flag)
    {
        cout<<"element found";
     }
    else
    {
        cout<<"element not found";
    }
   
}  

## 2d Matrix search using imp method
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n,m;
    cin>>n>>m;
    int target;
    cin>>target;
    int mat[n][m];
    
    for( int i=0;i<n;i++)
    {
        for( int j=0;j<m;j++)
        {
            cin>>mat[i][j];
        }
        
    }
    
    
    bool flag =false;
    
  int r =0, c=m-1;
  
 while(r<n && c>=0)
 {
     if( mat[r][c] == target)
     {
         flag= true;
     }
     
     if( mat[r][c] >target)
     {
         c--;
                                                  ## Time complexity O(N+M);
     }
     else
     {
         r++;
     }
     
     if(flag)
     {
         cout<<"element found"<<endl;
     }
     else
     {
         cout<<"element is not found"<<endl;
     }
 }
 }
